/*! GRIDLING
 * ---------------------------------------------
 * Version: 1.2.0
 * Copyright (c) 2017 N. Talbot; Dual licensed: MIT/GPL
 *
 * Description:
 * ---------------------------------------------
 * Gridling is a lightweight CSS layout tool for building responsive websites fast.
 *
 * Inspired by the Twitter Bootstrap framework, simple row and column classes are used
 * to convert design layouts into a grid of halves, thirds, quarters and fifths.
 * Gridling also includes breakpoint variables that can be reused throughout your project
 * to handle all media queries, its system is adaptable and highly customisable.
 *
 * Features:
 * ---------------------------------------------
 * 1. Grid system
 * 2. Spacing utilties (Padding and Margin)
 * 3. Media breakpoint variables
 *
 * More information:
 * ---------------------------------------------
 * http://gridling.naashdev.net
 * By Nathan Talbot
 */

// Settings
// ---------------------------------------------
$grid-width: 1080px;
$grid-width-lg: 1400px;
$grid-padding: 20px;
$class-iterations: 12; // Limit of how many classes to create, eg. up to 'r-g-12'

// Media Breakpoints
$xl: 1600px;
$large: 1200px;
$medium: $grid-width;
$small: 767px;
$xs: 480px;

$breakpoint-xl: "screen and (min-width: #{$xl})";
$breakpoint-lg: "screen and (min-width: #{$medium + 1})";
$breakpoint-md-and-lg: "screen and (min-width: #{$small + 1})";
$breakpoint-md: "screen and (max-width: #{$medium}) and (min-width: #{$small + 1})";
$breakpoint-sm: "screen and (max-width: #{$small})";
$breakpoint-xs: "screen and (max-width: #{$xs})";
// Add your own custom breakpoint variables here
// ...

// Mixins
// ---------------------------------------------
// Main grid classes
@mixin grid-columns-and-gutters($col-prefix, $row-prefix, $amount) {

    // Column widths
    #{$col-prefix}-1-2 {
        width: 50%;
    }
    #{$col-prefix}-1-3 {
        width: 33.333333333%;
    }
    #{$col-prefix}-2-3 {
        width: 66.666666666%;
    }
    #{$col-prefix}-1-4 {
        width: 25%;
    }
    #{$col-prefix}-3-4 {
        width: 75%;
    }
    #{$col-prefix}-1-5 {
        width: 20%;
    }
    #{$col-prefix}-2-5 {
        width: 40%;
    }
    #{$col-prefix}-3-5 {
        width: 60%;
    }
    #{$col-prefix}-4-5 {
        width: 80%;
    }

    // Row gutters
    @for $val from 1 through $amount {
        #{$row-prefix}-g-#{$val} {
            margin-left: ($val * -10px);
            > .col {
                padding-left: ($val * 10px);
            }
        }
    }

}

// Utilty classes
@mixin grid-utilities($prefix, $property, $amount) {

    @for $val from 1 through $amount {
        .#{$prefix}-#{$val} {
            #{$property}: $val * 10px;
        }
    }

}

// Core Styles
// ---------------------------------------------
.grid {
    max-width: $grid-width;
    width: 100%;
    margin: 0 auto;
    padding: 0 $grid-padding;
    // Clearfix
    &:before, &:after {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
    }
}

.grid-lg {
    max-width: $grid-width-lg;
}

.row {
    // Clearfix
    &:before, &:after {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
    }
}

.col {
    width: 100%;
    float: left;
}

// Grid Utilities
// ---------------------------------------------
// Print the column and gutter classes for each breakpoint
@media #{$breakpoint-md-and-lg} {
    @include grid-columns-and-gutters('.c', '.r', $class-iterations);
}

@media #{$breakpoint-xl} {
    @include grid-columns-and-gutters('.xl', '.xl', $class-iterations);
}

@media #{$breakpoint-lg} {
    @include grid-columns-and-gutters('.lg', '.lg', $class-iterations);
}

@media #{$breakpoint-md} {
    @include grid-columns-and-gutters('.md', '.md', $class-iterations);
}

@media #{$breakpoint-sm} {
    @include grid-columns-and-gutters('.sm', '.sm', $class-iterations);
}

@media #{$breakpoint-xs} {
    @include grid-columns-and-gutters('.xs', '.xs', $class-iterations);
}

// Spacing Utitlies
// ---------------------------------------------
// Margin bottom
@include grid-utilities('m-b', 'margin-bottom', $class-iterations);

// Margin top
@include grid-utilities('m-t', 'margin-top', $class-iterations);
